{"version":3,"sources":["constants/userConstants.js","reducers/userReducers.js","store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userAction.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","require","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userRegister","userInfo","userLogin","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","aria-hidden","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","length","Image","alt","Caption","HomeScreen","match","params","md","sm","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","fluid","ListGroupItem","ListGroup","countInStock","disabled","review","createdAt","substring","productId","post","Group","controlId","Label","contolId","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDeliverd","deliverdAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","ItemsPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductList","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","ProductListScreen","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2ce2687c.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\"\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\"\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\"\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"","const { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_LIST_RESET, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } = require(\"../constants/userConstants\")\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, success: true, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users : {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from \"./reducers/productReducers\"\r\nimport { cartReducer } from \"./reducers/cartReducers\"\r\nimport { userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userDeleteReducer, userUpdateReducer} from \"./reducers/userReducers\"\r\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer,  } from \"./reducers/orderReducers\"\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userRegister: userRegisterReducer,\r\n    userLogin: userLoginReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n})\r\n//Local storage matters\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : \"\"\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : \"\"\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n        paymentMethod: paymentMethodFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_RESET, PRODUCT_UPDATE_FAIL,  PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_CREATE_REVIEW_FAIL,\r\nPRODUCT_TOP_SUCCESS, PRODUCT_TOP_REQUEST, PRODUCT_TOP_FAIL } from \"../constants/productConstants\"\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\"\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\"\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\"\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\"\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\"\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\"\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\"\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\"\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\"\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\"\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\"\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\"\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\"\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\"\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\"\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\"\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\"\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\"","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\"\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n        return {\r\n            ...state,\r\n            shippingAddress: action.payload\r\n        }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n        return {\r\n            ...state,\r\n            paymentMethod: action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\"\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\"\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\"","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,             ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET,\r\nORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST,\r\nORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_FAIL, } from \"../constants/orderConstants\"\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\"\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\"\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\"\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\"\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\"\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\"\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\"\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\"\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\"\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\"\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\"\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\"\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\"\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_LIST_FAIL\"\r\nexport const ORDER_DELIVER_RESET = \"ORDER_LIST_RESET\"","import React, { useState } from 'react'\r\nimport { Form, Button } from \"react-bootstrap\"\r\n\r\n//After look at the videos cos this is damn confusing. I mean this search stuff...\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type=\"text\" name=\"q\" onChange={(e) => setKeyword(e.target.value)} placeholder=\"search products...\" className=\"mr-sm-2 ml-sm-5\">\r\n            </Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import {\r\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\nUSER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL} from \"../constants/userConstants\"\r\nimport axios from \"axios\"\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\r\n//Register\r\nexport const register = (name ,email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            \"/api/users/register\",\r\n            { name, email, password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n     localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            \"/api/users/login\",\r\n            { email, password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Get User Details\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Update User Profile Details\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//List Users only for admin\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: ` Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/users`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Delete Users only for admin\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: ` Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n             await axios.delete(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Upadate Users only for admin\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(\r\n            `/api/users/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport SearchBox from \"./SearchBox\"\r\nimport { logout } from \"../actions/userAction\"\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                            <Nav.Link>\r\n                               <i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> Cart\r\n                            </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id=\"username\">\r\n                                    <LinkContainer to=\"/profile\">\r\n                                        <NavDropdown.Item>\r\n                                            Profile\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ): (\r\n                            <LinkContainer to=\"/login\">\r\n                                <Nav.Link >\r\n                                    <i className=\"fa fa-user\" aria-hidden=\"true\"></i>  Sign In\r\n                                </Nav.Link>\r\n                            </LinkContainer>)}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                             <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                                <LinkContainer to=\"/admin/userlist\">\r\n                                    <NavDropdown.Item>\r\n                                        Users\r\n                                    </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                <LinkContainer to=\"/admin/productlist\">\r\n                                    <NavDropdown.Item>\r\n                                        Products\r\n                                    </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                 <LinkContainer to=\"/admin/orderlist\">\r\n                                    <NavDropdown.Item>\r\n                                        Orders\r\n                                    </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                      </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        CopyRight &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color}) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? \"fas fa-star\" : value >= 0.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? \"fas fa-star\" : value >= 1.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? \"fas fa-star\" : value >= 2.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? \"fas fa-star\" : value >= 3.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? \"fas fa-star\" : value >= 4.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\r\n            </span>\r\n            <span className=\"ratingText\">{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: \"#f8e825\",\r\n}\r\n// Rating.propTypes = {\r\n//     value: PropTypes.number.isRequired,\r\n//     text: PropTypes.string,\r\n//     color: PropTypes.string\r\n// }\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from \"react-bootstrap\"\r\nimport Rating from \"./Rating\"\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>\r\n                            {product.name}\r\n                        </strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from \"react-bootstrap\"\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n                {children}\r\n\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: \"info\"\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from \"react-bootstrap\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\" style={{ width: \"100px\", height: \"100px\", margin: \"auto\", display: \"block\" }}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={\r\n                    !isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productList/${x+1}`}>\r\n\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"keywords\" content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\nMeta.defaultProps = {\r\n    title: \"Welcome to ProShop\",\r\n    keywords: \"elctronics, buy electronices\",\r\n    description: \"We sell best products...\"\r\n}\r\nexport default Meta\r\n","import axios from \"axios\"\r\nimport {\r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_REQUEST, PRODUCT_TOP_FAIL\r\n} from \"../constants/productConstants\"\r\n\r\n\r\nexport const listProducts = ( keyword = \"\", pageNumber=\"\") => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n             await axios.delete(\r\n            `/api/products/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n           const { data } = await axios.post(\r\n               `/api/products`,\r\n               {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n//Note: put requests require content-type but others dont\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n           const { data } = await axios.put(\r\n               `/api/products/${product._id}`,\r\n               product,\r\n                config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n         await axios.post(\r\n               `/api/products/${productId}/reviews`,\r\n                review,\r\n                config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Image, Carousel } from \"react-bootstrap\"\r\nimport Loader from \"./Loader\"\r\nimport Message from \"./Message\"\r\nimport { listTopProducts } from \"../actions/productActions\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n\r\n    return loading ? <Loader /> : error ? (<Message variant= \"danger\" >Network connection weak or unavailable to load products</Message>) : (\r\n        <Carousel pause=\"hover\" className=\"bg-dark w-100\">\r\n            {products && products.length && products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} className=\"d-block w-100 h-auto\" />\r\n                        <Carousel.Caption className=\"carousel-caption\">\r\n                            <h2>{product.name} ({product.price}) </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport Product from \"../components/Product\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport Paginate from \"../components/Paginate\"\r\nimport Meta from \"../components/Meta\"\r\n\r\n\r\n\r\nimport { listProducts } from \"../actions/productActions\"\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta title=\"This is it\" />\r\n            <Row>\r\n                <Col md={6}>\r\n                    {!keyword ? <ProductCarousel /> : <Link to=\"/\" className=\"btn btn-light\">Go Back</Link>}\r\n                </Col>\r\n                <Col md={3}>\r\n                    <p>LIsts for some stuff</p>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <p>Some other things</p>\r\n                </Col>\r\n            </Row>\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">Network connection weak or unavailable to load products</Message> : (\r\n            <>\r\n                <Row>\r\n                    {products && products.length && products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n\r\n                    ))}\r\n                </Row>\r\n                <Paginate pages={pages} page={page} keyword={keyword ? keyword : \"\"} />\r\n            </>\r\n            ) }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState,  useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails, createProductReview } from \"../actions/productActions\"\r\nimport Loader from '../components/Loader'\r\nimport Message from \"../components/Message\"\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\"\r\nimport  Meta  from \"../components/Meta\"\r\n\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {success: successProductReview, error: errorProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            alert(\"Review Submitted!\")\r\n            setRating(0)\r\n            setComment(\"\")\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to=\"/\" >\r\n          <Button className=\"btn btn-light my-3\">Go Back</Button>\r\n            </Link>\r\n            { loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n             <Row className=\"product-page-grid-cont\" >\r\n                <Col md={6} className=\"product-page-section\">\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3} className=\"product-page-section\">\r\n                    <ListGroupItem variant=\"flush\" >\r\n                        <h3>{product.name}</h3>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            Price: ${product.price}\r\n                        </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        Description: {product.description}\r\n                    </ListGroupItem>\r\n                    </Col>\r\n                    <Col md={3} className=\"product-page-section\">\r\n                        <Card>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Price:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <strong>\r\n                                                ${product.price}\r\n                                            </strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem>\r\n                                    <Row >\r\n                                        <Col>\r\n                                            Status:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroupItem>\r\n\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col className=\"col-5\">Qty:</Col>\r\n                                            <Col className=\"col-7\">\r\n                                                    <Form.Control as=\"select\" value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                        {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                         <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                        )) }\r\n                                                    </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n\r\n                                <ListGroupItem>\r\n                                    <Button\r\n                                        onClick={addToCartHandler}\r\n                                        className=\"btn btn-block\" type=\"button\" disabled={product.countInStock === 0} >\r\n                                        Add to Cart\r\n                                    </Button>\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                    <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant=\"flush\">\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <h2>Write a Customer Review</h2>\r\n                                {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\r\n                                {userInfo ? (<Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId=\"rating\">\r\n                                        <Form.Label>Rating</Form.Label>\r\n                                        <Form.Control as=\"select\" value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                            <option value=\"\">Select...</option>\r\n                                            <option value=\"1\">1 - Poor</option>\r\n                                            <option value=\"2\">2 - Fair</option>\r\n                                            <option value=\"3\">3 - Good</option>\r\n                                            <option value=\"4\">1 - Ver Good</option>\r\n                                            <option value=\"5\">1 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group contolId=\"comment\">\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control as=\"textarea\" row=\"4\" value={comment} onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" variant=\"primary\">Submit</Button>\r\n                                </Form>) : <Message>Please <Link to=\"/login\">Sign in</Link> to write a review</Message>}\r\n                            </ListGroup>\r\n                    </Col>\r\n            </Row>\r\n            </>\r\n            )}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from \"axios\"\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\"\r\n\r\nexport const addToCart = ( id, qty ) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(data))\r\n}"," import React, { useEffect } from 'react'\r\n import { Link } from \"react-router-dom\"\r\n import { useDispatch, useSelector } from \"react-redux\"\r\n import { Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem } from \"react-bootstrap\"\r\n import Message from \"../components/Message\"\r\n import { addToCart, removeFromCart } from \"../actions/cartActions\"\r\n\r\n\r\n const CartScreen = ({ match, location, history }) => {\r\n const productId = match.params.id\r\n\r\n const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1\r\n\r\n const dispatch = useDispatch()\r\n\r\n const cart = useSelector((state) => state.cart)\r\n\r\n const { cartItems } = cart\r\n\r\n useEffect(() => {\r\n if (productId) {\r\n   dispatch(addToCart(productId, qty))\r\n }\r\n }, [dispatch, productId, qty])\r\n\r\n const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n     }\r\n\r\n const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\")\r\n }\r\n\r\n return (\r\n <Row>\r\n   <Col md={8}>\r\n       <h1>Shopping Cart</h1>\r\n       {cartItems.length === 0 ? (\r\n           <Message>\r\n               Your Cart is empty <Link to=\"/\">Go Back</Link>\r\n           </Message>\r\n      ) : (\r\n           <ListGroup variant=\"flush\">\r\n               {cartItems.map((item) => (\r\n                   <ListGroupItem key={item.product}>\r\n                       <Row>\r\n                           <Col md={2}>\r\n                               <Image src={item.image} alt={item.name} fluid rounded />\r\n                           </Col>\r\n                           <Col md={3}>\r\n                               <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                           </Col>\r\n                           <Col md={2}>${item.price}</Col>\r\n                           <Col md={3}>\r\n                               <Form.Control as=\"select\" value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))\r\n                               } >\r\n                                   {[...Array(item.countInStock).keys()].map((x) => (\r\n                                       <option key={x + 1} value={x + 1} >\r\n                                           {x + 1}\r\n                                       </option>\r\n                                   ))}\r\n\r\n                               </Form.Control>\r\n                           </Col>\r\n                           <Col md={1}>\r\n                               <Button type=\"button\" variant=\"light\" onClick={() => removeFromCartHandler(item.product)}>\r\n                                   <i className=\"fas fa-trash\"></i>\r\n                               </Button>\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroupItem>\r\n               ))}\r\n          </ListGroup>\r\n      )}\r\n   </Col>\r\n   <Col md={4}>\r\n       <Card>\r\n             <ListGroup variant=\"flush\">\r\n                 <ListGroupItem>\r\n                     <h2>\r\n                       Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                       items\r\n                     </h2>\r\n                     $\r\n                     {cartItems\r\n                       .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                       .toFixed(2)}\r\n                 </ListGroupItem>\r\n                     <ListGroupItem>\r\n                         <Button type=\"button\" className=\"btn-block\" disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                             Proceed To Checkout\r\n                         </Button>\r\n                 </ListGroupItem>\r\n           </ListGroup>\r\n       </Card>\r\n   </Col>\r\n </Row>\r\n )\r\n }\r\n\r\n export default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xl={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from \"../actions/userAction\"\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n     dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Sign In</h1>\r\n\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"} >\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from \"../actions/userAction\"\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\nconst submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n          setMessage(\"Passwords do not match\")\r\n    } else {\r\n           dispatch(register(name, email, password))\r\n      }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n          <h1>Sign Up</h1>\r\n\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"} >\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\"\r\nimport { listMyOrders } from \"../actions/orderActions\"\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\nconst submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n          setMessage(\"Passwords do not match\")\r\n    } else {\r\n          dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n          <Col md={3}>\r\n            <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n               {success && <Message variant=\"success\">Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type='name'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                  Update Profile\r\n                </Button>\r\n              </Form>\r\n          </Col>\r\n          <Col md={9}>\r\n              <h2>My Orders</h2>\r\n        {loadingOrders ? (<Loader /> ): errorOrders ? (<Message variant=\"danger\">{errorOrders}</Message>) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                    <i className=\"fas fa-times\" style={{color: \"red\"}}></i>\r\n                  )}</td>\r\n                  <td>{order.isDeliverd ? order.deliverdAt.substring(0, 10) : (\r\n                    <i className=\"fas fa-times\" style={{color: \"red\"}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n          </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST, ORDER_DELIVER_FAIL} from \"../constants/orderConstants\"\r\nimport axios from \"axios\"\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            `/api/orders`,\r\n            order,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/orders`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // if (message === \"Not authorized, token failed\") {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push(\"/shipping\")\r\n    }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\")\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n\r\n        <Col>\r\n              <Form.Check type=\"radio\" label=\"paypal or credit card\" id=\"PayPal\" name=\"paymentMethod\" value=\"PayPal\" checked onChange={(e) => setPaymentMethod( e.target.value )}></Form.Check>\r\n\r\n              <Form.Check type=\"radio\" label=\"Debit Card\" id=\"DebitCard\" name=\"paymentMethod\" value=\"DebitCard\" onChange={(e) => setPaymentMethod( e.target.value )}></Form.Check>\r\n\r\n        </Col>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from \"../components/Message\"\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from \"../actions/orderActions\"\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    //Calculate Prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n\r\n    cart.shippingPrice = addDecimals( (cart.ItemsPrice > 100 ? 0 : 100))\r\n\r\n    cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice))\r\n\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>{\" \"}\r\n                                {cart.shippingAddress.address}, {\" \"}\r\n                                {cart.shippingAddress.city}, {\" \"}\r\n                                {cart.shippingAddress.postalCode}, {\" \"}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method:</h2>\r\n                            <b>Method:</b>{\" \"}\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your Cart is empty</Message> : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                   <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type=\"button\"  className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrderHandler} >Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table,Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from \"../actions/userAction\"\r\n\r\n// notice the history, it is as object and used as props\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    // Handles users listing\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    // For security Issues  **The secondLine gets userInfo from the userAction\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // This deletes a user\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    // Dispatches users list\r\n    useEffect(() => {\r\n        // This makes sure that only the users sees userList\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push(\"/login\")\r\n        }\r\n        // History and dispatch is used as dependency\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm(\"Are you sure you want to delete this user?\"))\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i className='fas fa-check' style={{ color: 'green' }} title=\"Edit user\"></i>\r\n                                      ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }} title=\"Delete User\"></i>\r\n                                      )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n          )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from \"../actions/userAction\"\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\"\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push(\"/admin/userlist\")\r\n    } else {\r\n        if (!user.name || user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        }\r\n      }\r\n  }, [dispatch, userId, user, successUpdate, history])\r\n\r\nconst submitHandler = (e) => {\r\n  e.preventDefault()\r\n  dispatch(updateUser({ _id: userId,name, email, isAdmin}))\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\"  >\r\n             Go Back\r\n        </Link>\r\n        <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader /> }\r\n        {errorUpdate && <Message variant=\"danger\" className=\"btn btn-light my-3\">{errorUpdate}</Message>}\r\n              {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n<Form onSubmit={submitHandler}>\r\n    <Form.Group controlId='name'>\r\n      <Form.Label>Name</Form.Label>\r\n      <Form.Control\r\n        type='name'\r\n        placeholder='Enter name'\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='email'>\r\n      <Form.Label>Email Address</Form.Label>\r\n      <Form.Control\r\n        type='email'\r\n        placeholder='Enter email'\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='isadmin'>\r\n      <Form.Check\r\n        type='checkbox'\r\n        label='IS admin'\r\n        checked={isAdmin}\r\n        onChange={(e) => setIsAdmin(e.target.checked)}\r\n      ></Form.Check>\r\n    </Form.Group>\r\n\r\n    <Button type='submit' variant='primary'>\r\n      Update\r\n    </Button>\r\n  </Form>\r\n  )}\r\n        </FormContainer>\r\n      </>\r\n\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { deleteProduct, listProducts, createProduct } from \"../actions/productActions\"\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\"\r\n\r\n// notice the history, it is an object and used as props\r\nconst ProductList = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n\r\n    // Handles product listing\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    // Handles productDelete\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    //Handles productCreate\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    // For security Issues  **The secondLine gets userInfo from the userAction\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // Dispatches users list\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        // This makes sure the admin sees it\r\n        if (!userInfo.isAdmin) {\r\n            history.push(\"/login\")\r\n        }\r\n\r\n        if (successCreate) {\r\n             history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            //The empty string is for the keyword that is missing.\r\n            dispatch(listProducts(\"\", pageNumber))\r\n        }\r\n//These dependency makes an action to be fired anytime and not just once\r\n    }, [dispatch, history, userInfo, successCreate, createdProduct, successDelete, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this Product?\")) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={createProductHandler}>\r\n                       <i className=\"fas fa-plus\"></i> Create product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\" title=\"Edit product\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\" title=\"Delete product\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                </>\r\n          )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductList\r\n","import axios from \"axios\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\"\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState(\"\")\r\n    const [brand, setBrand] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState(\"\")\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push(\"/admin/productlist\")\r\n        } else {\r\n        if (!product.name || product._id !== productId) {\r\n            dispatch(listProductDetails(productId))\r\n        } else {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n        }\r\n      }\r\n  }, [dispatch, productId, product, successUpdate, history])\r\n//Here is where you implement either a single or multiple file upload\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append(\"image\", file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\nconst submitHandler = (e) => {\r\n  e.preventDefault()\r\n    dispatch(updateProduct({\r\n        _id: productId,\r\n        name, price, brand, category, description, countInStock, image\r\n    }))\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\"  >\r\n             Go Back\r\n        </Link>\r\n        <FormContainer>\r\n              <h1>Edit Product</h1>\r\n              {loadingUpdate && <Loader />}\r\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n         {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n<Form onSubmit={submitHandler}>\r\n    <Form.Group controlId='name'>\r\n      <Form.Label>Name</Form.Label>\r\n      <Form.Control\r\n        type='name'\r\n        placeholder='Enter name'\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='Price'>\r\n      <Form.Label>Price</Form.Label>\r\n      <Form.Control\r\n        type='number'\r\n        placeholder='Enter price'\r\n        value={price}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='image'>\r\n        <Form.Label>Image</Form.Label>\r\n        <Form.Control\r\n          type='text'\r\n           placeholder='Enter image Url'\r\n          value={image}\r\n          onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler}></Form.File>\r\n              {uploading && <Loader />}\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='brand'>\r\n        <Form.Label>Brand</Form.Label>\r\n        <Form.Control\r\n          type='text'\r\n           placeholder='Enter brand'\r\n          value={brand}\r\n          onChange={(e) => setBrand(e.target.value)}\r\n        ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='countInStock'>\r\n        <Form.Label>Count In Stock</Form.Label>\r\n        <Form.Control\r\n          type='number'\r\n           placeholder='Enter countInStock'\r\n          value={countInStock}\r\n          onChange={(e) => setCountInStock(e.target.value)}\r\n        ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='category'>\r\n        <Form.Label>category</Form.Label>\r\n        <Form.Control\r\n          type='text'\r\n           placeholder='Enter Category'\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n        ></Form.Control>\r\n     </Form.Group>\r\n\r\n    <Form.Group controlId='description'>\r\n        <Form.Label>Description</Form.Label>\r\n        <Form.Control\r\n          type='text'\r\n           placeholder='Enter description Url'\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Button type='submit' variant='primary'>\r\n      Update\r\n    </Button>\r\n  </Form>\r\n  )}\r\n        </FormContainer>\r\n      </>\r\n\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from \"../actions/orderActions\"\r\n\r\n\r\n// notice the history, it is an object and used as props\r\nconst OrderListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    // Handles order listing\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    // For security Issues  **The secondLine gets userInfo from the userAction\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // Dispatches users list\r\n    useEffect(() => {\r\n        // This makes sure the admin sees it\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push(\"/login\")\r\n        }\r\n\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Orders</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (\r\n                                    order.paidAt.substring(0, 10)\r\n                                ) : (\r\n                                        <i className=\"fas fa-times\" style={{ color: \"red\"}}></i>\r\n                                    )}</td>\r\n\r\n                                 <td>{order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0, 10)\r\n                                ) : (\r\n                                        <i className=\"fas fa-times\" style={{ color: \"red\"}}></i>\r\n                                    )}</td>\r\n                                <td>\r\n                                <LinkContainer to={`/order/${order._id}`}>\r\n                                    <Button variant=\"light\">\r\n                                        Details\r\n                                    </Button>\r\n                                    </LinkContainer>\r\n                                    </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n          )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react';\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport HomeScreen from \"./screens/HomeScreen\"\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\"\r\nimport OrderScreen from \"./screens/OrderScreen\"\r\nimport UserListScreen from \"./screens/UserListScreen\"\r\nimport UserEditScreen from \"./screens/UserEditScreen\"\r\nimport ProductListScreen from \"./screens/ProductListScreen\"\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\r\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} exact />\r\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n          <Route path=\"/admin/productlist\" component={ProductListScreen} exact />\r\n          <Route path=\"/admin/productlist/:pageNumber\" component={ProductListScreen} exact />\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./store\"\r\nimport './index.css';\r\nimport \"./bootstrap.min.css\"\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}